package com.krishna.sis.controller;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import com.krishna.sis.dto.StudentDto;
import com.krishna.sis.service.StudentService;
import com.krishna.sis.service.StudentServiceImpl;
import com.krishna.sis.util.EmailUtility;

@WebServlet("/StudentController")
public class StudentController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	StudentService studentService = new StudentServiceImpl();
	private static final String STUDENT_DETAILS_PAGE = "studentDetails.jsp";
	private static final String CREATE_STUDENT_PAGE = "studentForm.jsp";

	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String actions = request.getParameter("actions");
		String forward = " ";
		if (actions.equalsIgnoreCase("list")) {
			request.setAttribute("students", studentService.getAllStudentInfo());
			forward = STUDENT_DETAILS_PAGE;
		} else if (actions.equalsIgnoreCase("edit")) {
			int id = Integer.parseInt(request.getParameter("id"));
			request.setAttribute("student", studentService.getStudentInfoById(id));
			forward = CREATE_STUDENT_PAGE;
		} else if (actions.equalsIgnoreCase("delete")) {
			int id = Integer.parseInt(request.getParameter("id"));
			studentService.deleteStudentInfo(id);
			request.setAttribute("students", studentService.getAllStudentInfo());
			forward = STUDENT_DETAILS_PAGE;
		} else {
			forward = CREATE_STUDENT_PAGE;
		}

		RequestDispatcher rd = request.getRequestDispatcher(forward);
		rd.forward(request, response);
	}

	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		StudentDto studentDto = new StudentDto();
		studentDto.setStudentName(request.getParameter("sName"));
		studentDto.setCollegeName(request.getParameter("cName"));
		studentDto.setGender(request.getParameter("gender"));
		studentDto.setSubject(request.getParameter("sCombo"));
		studentDto.setRoll(Integer.parseInt(request.getParameter("roll")));
		studentDto.setEmail(request.getParameter("email"));
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		try {
			studentDto.setDob(sdf.parse(request.getParameter("dob")));
		} catch (ParseException e) {
			e.printStackTrace();
		}

		String[] departments = request.getParameterValues("departments");
		String department = "";
		for (String d : departments) {
			department += d + "/";
		}
		studentDto.setDepartments(department);

		String studentId = request.getParameter("id");
		if (studentId == null || studentId.isEmpty()) {
			studentService.saveStudentInfo(studentDto);
			EmailUtility.sendEmail(studentDto.getEmail());
		} else {
			studentDto.setId(Integer.parseInt(studentId));
			studentService.updateStudentInfo(studentDto);
		}

		RequestDispatcher rd = request.getRequestDispatcher(STUDENT_DETAILS_PAGE);
		request.setAttribute("students", studentService.getAllStudentInfo());
		rd.forward(request, response);
	}

	private String writeImageToFile(Part filePart, String imageUrl) throws IOException {
		OutputStream out = null;
		InputStream filecontent = null;
		try {
			out = new FileOutputStream(new File(imageUrl));
			filecontent = filePart.getInputStream();

			int read = 0;
			final byte[] bytes = new byte[1024];

			while ((read = filecontent.read(bytes)) != -1) {
				out.write(bytes, 0, read);
			}
		} catch (FileNotFoundException fne) {
			fne.printStackTrace();
		} finally {
			if (out != null) {
				out.close();
			}
			if (filecontent != null) {
				filecontent.close();
			}
		}
		return imageUrl;
	}

	private String getFileName(final Part part) {
		for (String content : part.getHeader("content-disposition").split(";")) {
			if (content.trim().startsWith("filename")) {
				return content.substring(content.indexOf('=') + 1).trim().replace("\"", "");
			}
		}
		return null;
	}

}
